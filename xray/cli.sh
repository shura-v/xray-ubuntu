#!/bin/bash

COMMAND=$1
SCRIPTS_DIR="$(cd "$(dirname "$0")" && pwd)"

show_help() {
  echo ""
  echo "üß≠ Xray CLI"
  echo ""
  echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
  echo "  ./cli.sh install     ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Xray (VLESS + REALITY)"
  echo "  ./cli.sh add         ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞"
  echo "  ./cli.sh list        ‚Äî —Å–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤"
  echo "  ./cli.sh remove      ‚Äî —É–¥–∞–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞"
  echo "  ./cli.sh config      ‚Äî —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
  echo "  ./cli.sh log         ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
  echo "  ./cli.sh status      ‚Äî —Å—Ç–∞—Ç—É—Å xray"
  echo ""
}

install() {
  read -p "–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç –¥–ª—è Xray [–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 8443]: " PORT
  PORT=${PORT:-8443}

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
  if ! [[ "$PORT" =~ ^[0-9]+$ ]]; then
    echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–æ—Ä—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ."
    exit 1
  fi

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–ª—é—á–∏
  if [ -f /etc/xray/private.key ] || [ -f /etc/xray/public.key ]; then
    echo "‚ùå –ö–ª—é—á–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç. –ü–µ—Ä–µ–∑–∞–ø–∏—Å—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞."
    echo "rm /etc/xray/private.key /etc/xray/public.key"
    exit 1
  fi

  echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Xray-core..."
  bash <(curl -Ls https://github.com/XTLS/Xray-install/raw/main/install-release.sh)

  echo "üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è X25519 –∫–ª—é—á–µ–π..."
  KEYS=$(xray x25519)
  PRIVATE_KEY=$(echo "$KEYS" | grep "Private key" | awk '{print $3}')
  PUBLIC_KEY=$(echo "$KEYS" | grep "Public key" | awk '{print $3}')

  mkdir -p /etc/xray
  echo "$PRIVATE_KEY" > /etc/xray/private.key
  echo "$PUBLIC_KEY" > /etc/xray/public.key

  cat <<EOF > /usr/local/etc/xray/config.json
{
  "inbounds": [
    {
      "port": $PORT,
      "protocol": "vless",
      "settings": {
        "clients": [],
        "decryption": "none"
      },
      "streamSettings": {
        "network": "tcp",
        "security": "reality",
        "realitySettings": {
          "show": false,
          "dest": "www.cloudflare.com:443",
          "xver": 0,
          "serverNames": ["www.cloudflare.com"],
          "privateKey": "$PRIVATE_KEY",
          "shortIds": ["12345678"]
        }
      }
    }
  ],
  "outbounds": [
    {
      "protocol": "freedom"
    }
  ]
}
EOF

  cat <<EOF > /etc/systemd/system/xray.service
[Unit]
Description=Xray REALITY Service
After=network.target

[Service]
ExecStart=/usr/local/bin/xray -config /usr/local/etc/xray/config.json
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF

  sudo ufw allow $PORT/tcp
  systemctl daemon-reload
  systemctl enable xray
  systemctl restart xray

  echo ""
  echo "‚úÖ Xray —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å REALITY –Ω–∞ –ø–æ—Ä—Ç—É $PORT!"
  echo "Public Key –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞: $PUBLIC_KEY"
  echo "–¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–π ./cli.sh add –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞"
}

case "$COMMAND" in
  install)
    install
    ;;
  add)
    bash "$SCRIPTS_DIR/add.sh"
    ;;
  list)
    bash "$SCRIPTS_DIR/list.sh"
    ;;
  remove)
    bash "$SCRIPTS_DIR/remove.sh"
    ;;
  config)
    nano /usr/local/etc/xray/config.json && systemctl restart xray
    ;;
  log)
    journalctl -u xray -e
    ;;
  status)
    systemctl status xray
    ;;
  *)
    show_help
    ;;
esac
